<?php
//Retrieve all data from database and displaying it
include "./database.class.php";
$conn = Database::getConnection();
$sql = "SELECT * FROM `commentbox`;";
$result = $conn->query($sql);
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Comment Box</title>
    <link rel="icon" href="icon.png" type="image/x-icon">
    <link rel="stylesheet" href="styles.css"> 
</head>
<body>

<div class="comment-box">
    <form id="commentForm" action="insert.php" method="POST">
        <h1>Cross-Site Scripting (XSS) </h1>
        <p>When encountering a single quote within a script, use an escape sequence (backslash) to prevent it from being treated as a delimiter. <strong>alert(\'This is an alert message!\');</strong></p>
        <div class="form-group">
            <label for="name">Your Name:</label>
            <input type="text" id="name" name="name" placeholder="Enter your name" required>
        </div>
        
        <div class="form-group">
            <label for="comment">Your Comment:</label>
            <textarea id="comment" name="comment" placeholder="Enter your comment" rows="6" required></textarea>
        </div>

        <input type="submit" value="Post Comment">
    </form>
</div>

<div class="comment-section">
    <h2>All Comments</h2>
    <p>I have created a website that suffers from a Cross-Site Scripting (XSS) vulnerability. 
        In this scenario, when users input script commands into either the name or comment field, the application treats this input merely as a string and stores it in the database. 
        However, upon retrieval of this data from the database and its subsequent rendering in HTML, the browser interprets these stored strings as executable script commands. 
        This behavior poses significant security risks. Example:
        <strong>&lt;script&gt; alert(\&apos;Hello World!\&apos;);&lt;/script&gt;</strong> use this an input....
 </p>
    <?php // displaying through loop
    if ($result->num_rows > 0) {
        while($row = $result->fetch_assoc()) {
            $user = $row['Name'];
            $comm = $row['Comment']; 
    ?>
        <div class="comment">
            <div class="comment-content">
                <h4><?php echo $user; ?></h4>
                <p><?php echo $comm; ?></p>
            </div>
            <div style="clear:both;"></div>
        </div>
    <?php
        }
    } else {
        echo "No comments yet.";
    }
    ?>
</div>

</body>
</html>
